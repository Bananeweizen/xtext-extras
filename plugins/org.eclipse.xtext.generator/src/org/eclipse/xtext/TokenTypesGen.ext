/*******************************************************************************
 * Copyright (c) 2008 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 *******************************************************************************/

import xtext;
extension org::eclipse::xtext::Extensions;
extension org::eclipse::xtext::Properties;

String antlrTokenName(Object key) :
	JAVA org.eclipse.xtext.TokenTypesExtensions.getAntlrTokenName(java.lang.Object);	

Set antlrTokenTypes() :
	JAVA org.eclipse.xtext.TokenTypesExtensions.getAntlrTokenTypes();	
	
String tokenType(Grammar g, Object antlrToken) :
     antlrToken.isKeyword()
    	? "ITokenTypes.KEYWORD" 
    	: g.lexerRule(antlrToken).tokenTypeConstant();	

boolean isKeyword(Object antlrToken) :
	antlrTokenName(antlrToken).startsWith("'");

String tokenTypeConstant(LexerRule this) :
	definingInterfaceName() + '.' + tokenType.toUpperCase();

LexerRule lexerRule(Grammar this, Object antlrToken) :
	allLexerRules().select(l|"RULE_" + l.name==antlrTokenName(antlrToken)).first();

cached String tokenTypesInterfaceName(Grammar this) :	
	languageName() + "TokenTypes";

cached String definingInterfaceName(LexerRule this) :
	if isBuiltinRule() then 
		'ITokenTypes'
	else 
		grammar().tokenTypesInterfaceName();

