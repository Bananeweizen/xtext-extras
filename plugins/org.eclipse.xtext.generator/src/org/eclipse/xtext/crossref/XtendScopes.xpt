«REM»
/*******************************************************************************
 * Copyright (c) 2008 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 *******************************************************************************/
«ENDREM»

«IMPORT xtext»
«IMPORT xtextgen»

«EXTENSION org::eclipse::xtend::util::stdlib::globalvar»
«EXTENSION org::eclipse::xtext::Extensions»
«EXTENSION org::eclipse::xtext::Properties»
«EXTENSION org::eclipse::xtext::crossref::Crossref»

«DEFINE root FOR GenService»
	«EXPAND XtendScopeProvider»
	«EXPAND GenXtendScopeProvider»
	«EXPAND JavaXtendScopeProvider»
«ENDDEFINE»

«DEFINE GenXtendScopeProvider FOR GenService»
«FILE xtendGenScopeProvider().toXtendFilePath() SRC_GEN-»
/*
«fileHeader()»
*/

import org::eclipse::xtext::crossref;

«FOREACH grammar().metamodelDeclarations AS mm-»
import «mm.ePackage.name»;
«ENDFOREACH-»

extension org::eclipse::xtext::xtend::crossref::Crossref reexport;
extension org::eclipse::xtend::util::stdlib::io;

/**
 * Represents a generated, default implementation of interface {@link IScopeProvider}.
 * 
 * @see org.eclipse.xtext.ui.common.editor.contentassist.IScopeProvider
 */

«LET {} AS processedFqnFeatureNames»«
	FOREACH grammar().eReferencesFromCrossRefs() AS eReference»
List[IScopedElement] scope_«eReference.name»(«grammar().qualifiedXtendName(eReference.eType)» this):
	allRootElements().typeSelect(«grammar().qualifiedXtendName(eReference.eType)»).collect(x | createScopedElement(x.name, x));
«	ENDFOREACH»«
ENDLET»
«ENDFILE»
«ENDDEFINE»


«DEFINE XtendScopeProvider FOR GenService»
«FILE xtendScopeProvider().toXtendFilePath() SRC-»
/*
«fileHeader()»
*/

import xtext;

import org::eclipse::jface::text::contentassist;
import org::eclipse::xtext::crossref;

«FOREACH grammar().metamodelDeclarations AS mm-»
import «mm.ePackage.name»;
«ENDFOREACH-»

extension «xtendGenScopeProvider().toXtendFqName()» reexport;

/**
 * Customize functions defined in «xtendGenScopeProvider().toXtendFilePath()» here.
 */

«ENDFILE»
«ENDDEFINE»


«DEFINE JavaXtendScopeProvider FOR GenService»
«FILE genClassFQName.toJavaFilePath() SRC_GEN-»
/*
«fileHeader()»
*/

package «genClassFQName.toJavaPackage()»;

import org.eclipse.xtext.xtend.crossref.AbstractXtendScopeProvider;

/**
 * An {@link IScopeProvider} that calls Xtend extensions.
 */
public class «genClassFQName.toSimpleName()» extends AbstractXtendScopeProvider {

	@Override
	protected ClassLoader getClassLoader() {
		return this.getClass().getClassLoader();
	}

	@Override
	protected String getMasterXtendFileName() {
		return "«xtendScopeProvider().toXtendFqName()»";	
	}
	
}
«ENDFILE»
«ENDDEFINE»