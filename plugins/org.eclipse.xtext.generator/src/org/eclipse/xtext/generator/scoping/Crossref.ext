/*******************************************************************************
 * Copyright (c) 2009 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 *******************************************************************************/
import org::eclipse::xtext;
import org::eclipse::emf::ecore;

extension org::eclipse::xtext::Extensions;
extension org::eclipse::xtext::EcoreUtils;

String xtendGenScopeProvider(Grammar this):
	getNamespace() + ".Gen" + getName() + "ScopeProvider";
	
String toXtendFqName(String s) :
	s.replaceAll('\\.','::');

String xtendScopeProvider(Grammar this):
	getId() + "ScopeProvider";

String javaXtendScopeProvider(Grammar this):
	getId() + "ScopeProvider";

List[CrossReference] allCrossReferences(Grammar this) :
	allContents().typeSelect(CrossReference);
	
Collection[EReference] eReferencesFromCrossRefs(Grammar this):
	allCrossReferences().eReference().toSet();

String qualifiedXtendName(Grammar this, EClassifier eClass) :
	metamodelDeclarations.select(m|m.EPackage== eClass.EPackage).first().aliasPrefix() + eClass.name;
	
String aliasPrefix(AbstractMetamodelDeclaration this) :
	alias == null ? "" : alias + "::";
 