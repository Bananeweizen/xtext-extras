«REM»
/*******************************************************************************
 * Copyright (c) 2008 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 *******************************************************************************/
«ENDREM»

«IMPORT xtext»
«IMPORT xtextgen»

«EXTENSION org::eclipse::xtext::Extensions»
«EXTENSION org::eclipse::xtext::Properties»

«DEFINE root FOR GenService»
«FILE genClassFQName.toJavaFilePath() SRC_GEN-»
/*
«fileHeader()»
*/

package «genClassFQName.toJavaPackage()»;

import org.eclipse.emf.common.util.URI;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.BaseEPackageAccess;

public class «genClassFQName.toSimpleName()» extends BaseEPackageAccess implements IGrammarAccess {

	private static final String «languageName().toUpperCase()»_GRAMMAR_CP_URI = "«grammarResourceURI(grammar())»";
	private static Grammar GRAMMAR = null;
	
	@SuppressWarnings("unused")
	public synchronized Grammar getGrammar() {	
		if (GRAMMAR==null) {
			// assert the XtextPackage implementation is loaded
			XtextPackage xtextPackage = XtextPackage.eINSTANCE;
			GRAMMAR = (Grammar) loadGrammarFile(«genClassFQName.toSimpleName()».class.getClassLoader(),«languageName().toUpperCase()»_GRAMMAR_CP_URI);
		}
		return GRAMMAR;
	}
	
	«EXPAND getter FOREACH grammar().allParserRules()»
	«EXPAND getter FOREACH grammar().allLexerRules()»
   
}
«ENDFILE»
«ENDDEFINE»

«DEFINE getter FOR ParserRule»
	public ParserRule pr_«name»() {
		return (ParserRule) getGrammar().eResource().getResourceSet().getEObject(URI.createURI("«objectURI(this)»"),true); 
	}
«ENDDEFINE»

«DEFINE getter FOR LexerRule»
	public LexerRule lr_«name»() {
		return (LexerRule) getGrammar().eResource().getResourceSet().getEObject(URI.createURI("«objectURI(this)»"),true); 
	}
«ENDDEFINE»