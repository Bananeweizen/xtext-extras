«REM»
/*******************************************************************************
 * Copyright (c) 2008 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 *******************************************************************************/
«ENDREM»

«IMPORT xtext»

«EXTENSION org::eclipse::xtext::grammargen::GrammarGen»

«DEFINE factory FOR Grammar»
«FILE pathName()+'/parser/'+factoryName()+'.java'-»
package «packageName()».parser;

import org.eclipse.emf.ecore.EPackage;

public class «factoryName()» extends org.eclipse.xtext.core.parser.AbstractEcoreElementFactory {
	private final java.util.Map<String, EPackage[]> map = new java.util.HashMap<String, EPackage[]>();
	{
	«FOREACH metamodelDeclarations.alias.toSet() AS name »
		map.put(«name==null?'null':'"'+name+'"'», new EPackage[] {
		«FOREACH metamodelDeclarations.select(mmd| mmd.alias==name) AS mmd SEPARATOR ','»
			«IF GeneratedMetamodel.isInstance(mmd)»
			«packageName()».«languageName()»EPackageAccess.get«((GeneratedMetamodel)mmd).name»EPackage()
			«ELSE»
			«packageName()».«languageName()»EPackageAccess.get(«((ReferencedMetamodel)mmd).uri»)
			«ENDIF»
		«ENDFOREACH»
		});
	«ENDFOREACH»
	};
	
	protected EPackage[] getEPackages(String alias) {
		return map.get(alias);
	}
}
«ENDFILE»
«ENDDEFINE»