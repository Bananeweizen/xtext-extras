«REM»
/*******************************************************************************
 * Copyright (c) 2008 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 *******************************************************************************/
«ENDREM»

«IMPORT xtext»
«IMPORT xtextgen»

«EXTENSION org::eclipse::xtext::Extensions»
«EXTENSION org::eclipse::xtext::Properties»
«EXTENSION org::eclipse::xtext::ui::UIProperties»

«DEFINE root FOR GenModel»
«IF !this.grammar.isAbstract()»
	«EXPAND Plugin::plugin_xml»
	«EXPAND ServiceConfig::root»
	«EXPAND Manifest::manifest_mf»
	«EXPAND GuiceInjector::root»
	«EXPAND activator»
	«copyFiles("org/eclipse/xtext/ui", outletPath("UI") + "/icons/", { "editor.gif" })»  
«ENDIF»
«ENDDEFINE»

«DEFINE activator FOR GenModel»
«FILE activatorClassFQN().toJavaFilePath() UI_SRC_GEN-»
package «activatorClassFQN().toJavaPackage()»;

import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.osgi.framework.BundleContext;

import com.google.inject.Guice;
import com.google.inject.Injector;

/**
 * Generated from UIPlugin.xpt
 */
public class «activatorClassFQN().toSimpleName()» extends AbstractUIPlugin {

	private Injector injector;
	private static «activatorClassFQN().toSimpleName()» INSTANCE;

	public Injector getInjector() {
		return injector;
	}
	
	@Override
	public void start(BundleContext context) throws Exception {
		super.start(context);
		INSTANCE = this;
		this.injector = Guice.createInjector(new «runtimeModuleClass(grammar)»(), new «uiModuleClass(grammar)»());
	}
	
	public static «activatorClassFQN().toSimpleName()» getInstance() {
		return INSTANCE;
	}
	
}
«ENDFILE»
«ENDDEFINE»