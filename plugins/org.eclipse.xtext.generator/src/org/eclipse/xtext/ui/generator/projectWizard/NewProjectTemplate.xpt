«REM»
/*******************************************************************************
 * Copyright (c) 2009 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 *******************************************************************************/
«ENDREM»

«IMPORT org::eclipse::xtext»

«EXTENSION org::eclipse::xtext::GrammarUtil»
«EXTENSION org::eclipse::xtext::ui::generator::projectWizard::Extensions»
«EXTENSION org::eclipse::xtext::generator::Naming»

«DEFINE root(String modelFileExtension) FOR Grammar»
«FILE newProjectTemplateName().replaceAll('::', '/')+'.xpt' SRC_UI-»
«OP()»IMPORT «projectInfoClassName().toJavaPackage().replaceAll('\\.', '::')»«CL()»

«OP()»DEFINE main FOR «projectInfoClassName().toSimpleName()»«CL()»
«OP()»EXPAND model FOR this«CL()»
«OP()»EXPAND workflow FOR this«CL()»
«OP()»ENDDEFINE«CL()»

«OP()»DEFINE model FOR «projectInfoClassName().toSimpleName()»«CL()»
«OP()»FILE "src/Model.«modelFileExtension»"-«CL()»
/*
 * This is an example model
 */
type String

entity Leaf extends Composable {
  property name: String
}

entity Composite extends Composable {
  property content: Composable[]
}

entity Composable {
}
«OP()»ENDFILE«CL()»
«OP()»ENDDEFINE«CL()»

«OP()»DEFINE workflow FOR «projectInfoClassName().toSimpleName()»«CL()»
«OP()»FILE "src/Generator.mwe2"-«CL()»
module Generator

var modelFile = "Model.«modelFileExtension»"
var targetDir = "../src-gen"

Workflow {
	component = @workflow.«getName()»Generator auto-inject {}
}
«OP()»ENDFILE«CL()»
«OP()»ENDDEFINE«CL()»
«ENDFILE»
«ENDDEFINE»
