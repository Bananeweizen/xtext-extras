module org.xtext.example.mydsl.GenerateMyDsl

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.generator.*
import org.eclipse.xtext.ui.generator.*

var baseName = "org.xtext.example.full"
var rootPath = ".."

Workflow {
	
	component = XtextGenerator auto-inject {
		configuration = {
			project = WizardConfig auto-inject {
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				ideaPlugin = {
					enabled = true
				}
				web = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = auto-inject {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			uri = "platform:/resource/${baseName}/src/org/xtext/example/mydsl/MyDsl.xtext"
			fileExtensions = "mydsl"

			// generates Java API for the generated EPackages
			emfGenerator = {
				javaModelDirectory = "/${baseName}/src-gen"
				updateBuildProperties = true
			}

			serializer = {
				generateStub = false
			}

			// generates a more lightweight Antlr parser and lexer tailored for content assist
			fragment = adapter.FragmentAdapter {
				fragment = parser.antlr.XtextAntlrUiGeneratorFragment auto-inject {}
			}
		}
	}
}
